@tailwind base;
@tailwind components;
@tailwind utilities;

/* Smooth scrolling */
html {
  /* scroll-behavior: smooth; */
}

html, body {
  height: 100%;
  overflow-x: hidden; 
  overflow-y: auto;
}

main {
  min-height: 100%;
}

/* Base animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from { 
    transform: translateY(30px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-50px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(50px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0.9);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes float {
  0% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
  100% { transform: translateY(0px); }
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

@keyframes shimmer {
  0% { background-position: -1000px 0; }
  100% { background-position: 1000px 0; }
}

@keyframes rotateIn {
  from {
    transform: rotate(-180deg) scale(0);
    opacity: 0;
  }
  to {
    transform: rotate(0) scale(1);
    opacity: 1;
  }
}

@keyframes bounce {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

/* Utility classes */
.animate-fade-in {
  animation: fadeIn 0.8s ease-out forwards;
}

.animate-slide-up {
  animation: slideUp 0.8s ease-out forwards;
}

.animate-slide-in-left {
  animation: slideInLeft 0.8s ease-out forwards;
}

.animate-slide-in-right {
  animation: slideInRight 0.8s ease-out forwards;
}

.animate-scale-in {
  animation: scaleIn 0.8s ease-out forwards;
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

.animate-pulse-slow {
  animation: pulse 3s ease-in-out infinite;
}

.animate-shimmer {
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
  background-size: 1000px 100%;
  animation: shimmer 2s infinite linear;
}

.animate-rotate-in {
  animation: rotateIn 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.animate-bounce-slow {
  animation: bounce 2s ease-in-out infinite;
}

/* Hover animations */
.hover-lift {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
  transform: translateY(-8px);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
}

.hover-scale {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-scale:hover {
  transform: scale(1.03);
}

.hover-rotate {
  transition: all 0.3s ease-in-out;
}

.hover-rotate:hover {
  transform: rotate(5deg);
}

.hover-glow {
  transition: all 0.3s ease-in-out;
}

.hover-glow:hover {
  box-shadow: 0 0 20px rgba(99, 102, 241, 0.4);
}

/* Stagger children animations */
.stagger-children > * {
  opacity: 0;
}

.stagger-children > *:nth-child(1) { animation: slideUp 0.8s ease-out 0.1s forwards; }
.stagger-children > *:nth-child(2) { animation: slideUp 0.8s ease-out 0.2s forwards; }
.stagger-children > *:nth-child(3) { animation: slideUp 0.8s ease-out 0.3s forwards; }
.stagger-children > *:nth-child(4) { animation: slideUp 0.8s ease-out 0.4s forwards; }
.stagger-children > *:nth-child(5) { animation: slideUp 0.8s ease-out 0.5s forwards; }

/* Scroll reveal animations */
.reveal-on-scroll {
  transition: all 1s cubic-bezier(0.4, 0, 0.2, 1);
  transition-delay: var(--reveal-delay, 0s);
}

.reveal-on-scroll.is-visible {
  opacity: 1 !important;
  transform: translate(0, 0) !important;
}

/* Gradient text */
.gradient-text {
  @apply bg-clip-text text-transparent bg-gradient-to-r from-indigo-600 to-purple-600;
}

/* Glass effect */
.glass-effect {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

/* Card hover effects */
.card-hover {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  border: 1px solid transparent;
}

.card-hover:hover {
  transform: translateY(-8px);
  border-color: theme('colors.indigo.200');
  box-shadow: 
    0 10px 40px -10px rgba(0, 0, 0, 0.1),
    0 0 20px rgba(79, 70, 229, 0.1);
}

/* Button animations */
.button-hover {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
}

.button-hover::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 120%;
  height: 0;
  padding-bottom: 120%;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0);
  opacity: 0;
  transition: transform 0.5s ease-out, opacity 0.3s ease-out;
}

.button-hover:hover::after {
  transform: translate(-50%, -50%) scale(1);
  opacity: 1;
}

/* Image hover effects */
.image-hover {
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  filter: brightness(1);
}

.image-hover:hover {
  filter: brightness(1.1);
  transform: scale(1.02);
}

/* Loading animations */
.loading-shimmer {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite linear;
}

/* Parallax effect */
.parallax {
  transform: translateY(var(--parallax-y, 0));
  transition: transform 0.1s ease-out;
}

/* 3D card effect */
.card-3d {
  transform-style: preserve-3d;
  transform: perspective(1000px);
  transition: transform 0.3s ease-out;
}

.card-3d:hover {
  transform: perspective(1000px) rotateX(5deg) rotateY(5deg);
}

/* Gradient border animation */
.gradient-border {
  position: relative;
  background: linear-gradient(white, white) padding-box,
              linear-gradient(90deg, #6366f1, #a855f7) border-box;
  border: 2px solid transparent;
  animation: borderRotate 4s linear infinite;
}

@keyframes borderRotate {
  from { border-image-source: linear-gradient(0deg, #6366f1, #a855f7); }
  to { border-image-source: linear-gradient(360deg, #6366f1, #a855f7); }
}